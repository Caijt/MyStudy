
Request.QueryString["参数名"]//取得url里面参数
Request.form["参数名"]//
Request.Params[]//
Request[]

method=get是在url里传参数
post是在请求报文里传参数

Response.Write()//页面输出内容
Response.Redirect()//重定向页面
Response.End()//结束输出

上传东西
form里的编码要改成enctype="multipart/form-data"
<input type="file" />
Request.Files //得取请求报文里的文件集合
HttpPostedFile.SaveAs //另存为
context.Server.MapPath() //

图片处理
给图片加水印
context.Response.ContextType="image/jpg  "
Image img=Bitmap.FromFile();
Graphics.FromImage();
Graphics.DrawString("字",new Font(),Brushes.Black,0,0)//给图片加字
Graphics.FillRectangle();//画一个实心长方形
Graphics.DrawRectangle();//画一个长方形边框

Graphics.DrawImage();//
Bitmap.SetResolution()//制作缩略图 

下载文件
Response.AddHeader("Content-Disposition","attchment;filename=")
Response.WriteFIle();

Request.UrlReferrer//请求网页来源
Request.UserHostAddress //访问者的IP地址
Request.Cookies  //获取客户端cookie集合 

Response.Buffer //设置是否启动缓冲
Response.Flush() //立即将缓冲里的数据write到客户端
Response.Clear() //清空缓冲里的数据
Response.ContentEncoding //输出流的编码
Response.ContentType //输出流的内容类型 (默认text/html,text/plain,image/jpeg)
Response.OutputStream //输出流
Response.Redirect() //302重定向

Server对象
Server.MapPath() //取得文件的物理路径
Server.Execute() //执行指定的页面后，再返回原来的页面，继续输出
Server.Transfer() //执行指定的页面，执行后不再输出
Server.HtmlEncode() //html转码，使html元素以字符串方式输出
Server.HtmlDecode() //解码
Server.UrlEncode() //



状态保持
ViewState[""] //使用在一个runat="server"的form中，其实就是一个隐藏的input
Request.Cookies["键"] //获取一个HttpCookie对象的值
HttpCookie.Expires //设置Cookie在客户机失效日期，如果没设置则客户端一关浏览器就没了
HttpCookie.Expires=DateTime.Now.AddDays(-1) //将cookie失效日期设置为前一天，cookie就失效了
Response.Cookies.Add() //输出cookie在客户端浏览器内存里
Session["键"]=值 //用session来保持状态，其实就是将sessionid以cookie的方式存在客户端，下次请求时读取客户端的sessionid的值来读取存在服务器里session池相应id对应的值
Session.Timeout //设置session在服务端失效时间（分钟为单位）
Session.Abandon() //设置session失效

Session在一般处理程序中得实现IRequiresSessionState接口

Session其他两种存储方式
aspnet_state.exe
<sessionState mode="StateServer" stateConnectionString="tcpip=localhost:42424">
在服务里开启asp.net状态服务
SQLServer
<sessionState mode="SQLServer" >

动态生成验证码图片
using(Bitmap img=new Bitmap(100,50))
{
	using(Graphics g=Graphics.FromImage(img))
	{
		g.DrawString()
	}
}

Application["键"] //一个公用的键值对
